import { IPolygonQuery } from "../transport/request";
export interface IAggV2 {
  T?: string;
  v: number;
  o: number;
  c: number;
  h: number;
  l: number;
  t?: number;
  n?: number;
}
export interface IAggResponse {
  ticker: string;
  status: string;
  adjusted: boolean;
  queryCount?: number;
  resultsCount?: number;
  results: IAggV2[];
}
export interface IAggregateQuery extends IPolygonQuery {
  adjusted?: boolean;
}
export declare const previousClose: (
  ticker: string,
  query?: IAggregateQuery
) => Promise<IAggResponse>;
export declare const aggregates: (
  ticker: string,
  multiplier: number,
  timespan: string,
  from: string,
  to: string,
  query?: IAggregateQuery
) => Promise<IAggResponse>;
export declare const groupedDaily: (
  locale: string,
  market: string,
  date: string,
  query?: IAggregateQuery
) => Promise<IAggResponse>;
